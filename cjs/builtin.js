"use strict";var e;Object.defineProperty(exports,"__esModule",{value:!0}),!function(e,t){for(var r in t)Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}(exports,{composeHangul:function(){return u},copyDir:function(){return S},deleteFilesInFolder:function(){return O},exists:function(){return v},existsFile:function(){return h},existsFolder:function(){return $},findFiles:function(){return m},findFolders:function(){return F},loadEnv:function(){return f},loadFile:function(){return l},loadJson:function(){return a},makeDir:function(){return g},moveFile:function(){return x},moveFiles:function(){return _},renameFilesInFolder:function(){return j},sanitizeName:function(){return s},saveEnv:function(){return p},saveFile:function(){return d},saveJson:function(){return y},setPath:function(){return c},slashedFolder:function(){return o},substituteInFile:function(){return E}});const t=/*#__PURE__*/function(e,t){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=n(t);if(r&&r.has(e))return r.get(e);var i={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in e)if("default"!==c&&Object.prototype.hasOwnProperty.call(e,c)){var u=o?Object.getOwnPropertyDescriptor(e,c):null;u&&(u.get||u.set)?Object.defineProperty(i,c,u):i[c]=e[c]}return i.default=e,r&&r.set(e,i),i}(require("fs")),r=(e=require("path"))&&e.__esModule?e:{default:e};function n(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(n=function(e){return e?r:t})(e)}const i=e=>e.replace(/^\uFEFF/gm,"").replace(/^\u00BB\u00BF/gm,"").replace(/\r\n/g,"\n"),o=e=>(e=e.replace(/\\/g,"/")).endsWith("/")?e.slice(0,-1):e,c=e=>(e.startsWith(".")&&(e=r.default.join(process.cwd(),e)),o(e)),u=e=>e?e.toString().normalize("NFKC"):"",s=e=>e?(e=u(e)).replace(/\[/g,"(").replace(/\]/g,")").replace(/[^\uAC00-\uD7A3a-zA-Z0-9_\(\)\<\>,\s]/g,"").replace(/\s+/g," ").trim():"",l=(e,r="utf8")=>{try{return i(t.readFileSync(c(e),{encoding:r}))}catch{return""}},a=(e,r="utf8")=>{try{return JSON.parse(i(t.readFileSync(c(e),{encoding:r})))}catch{return{}}},f=(e,r="utf8")=>{try{let n=i(t.readFileSync(c(e),{encoding:r}));if(!n)return{};let o=n.split("\n"),u={};for(let e of o){let t=e.split("="),[r,n]=[t[0].trim(),t.slice(1).join("=").trim()];!r||r.startsWith("#")||r.startsWith("//")||(u[r]=n.replace(/^['"]|['"]$/g,""))}return u}catch{return{}}},p=(e,r,n="utf8")=>{let i=Object.entries(r).map(([e,t])=>`${e}=${t}`).join("\n");t.writeFileSync(c(e),i,{encoding:n})},d=(e,n="",{encoding:i="utf-8",overwrite:o=!0,newFile:u=!0}={})=>{if(e=c(e),u&&t.existsSync(e)){let n=r.default.dirname(e),i=r.default.extname(e),o=r.default.basename(e,i),c=1;for(;t.existsSync(e);)e=r.default.join(n,`${o}(${c})${i}`),c++}t.mkdirSync(r.default.dirname(e),{recursive:!0}),o?t.writeFileSync(e,n,i):t.appendFileSync(e,n,i)},y=(e,t={},{indent:r=2,overwrite:n=!0,newFile:i=!1}={})=>{d(c(e),JSON.stringify(t,null,r),{overwrite:n,newFile:i})},g=e=>{t.mkdirSync(c(e),{recursive:!0})},S=(e,r,n=!0)=>{t.cpSync(c(e),c(r),{recursive:n})},m=(e,n="",i=[])=>{if(!t.existsSync(e))return[];let o=t.readdirSync(e);return i=i||[],o.forEach(function(o){t.statSync(e+"/"+o).isDirectory()?i=m(e+"/"+o,n,i):(n instanceof RegExp?n:new RegExp(n.replace(/\*/g,".*"))).test(o)&&i.push(r.default.join(e,"/",o))}),i};function F(e,n=""){let i=[];for(let c of t.readdirSync(e)){let u=r.default.join(e,c),s=n instanceof RegExp?n:new RegExp(n.replace(/\*/g,".*"));t.statSync(u).isDirectory()&&s.test(c)&&i.push(o(u))}return i}const $=e=>t.existsSync(e),h=e=>t.existsSync(e),v=e=>t.existsSync(e),x=(e,r,n,i)=>{e=o(e),r=o(r),t.rename(`${e}/${n}`,`${r}/${i}`,e=>console.log(e))},_=(e,r,n,i)=>{e=o(e),r=o(r),t.existsSync(r)||t.mkdirSync(r,{recursive:!0});for(let o=0;o<n.length;o++){let c=n[o],u=i[o];t.rename(`${e}/${c}`,`${r}/${u}`,e=>console.log(e))}},j=(e,r,n)=>(e=`${process.env.DIR_ROOT}/${e}`,r=e=>e.endsWith(".ts"),n=t=>`${e}/${t}`,t.readdirSync(e).filter(e=>r(e)).map(e=>n(e))),O=(e,n="node_modules/,.git/.DS_Store",i=!0)=>{try{if(!t.existsSync(e))return;let o=n.split(",").map(e=>e.endsWith("/")?e:e.includes("*")?RegExp("^"+e.replace(/\*/g,".*")+"$"):e);for(let c of t.readdirSync(e))try{let u=r.default.join(e,c),s=t.statSync(u);s.isDirectory()&&i?o.some(e=>"string"==typeof e&&e.endsWith("/")&&c+"/"===e)?t.rmSync(u,{recursive:!0,force:!0}):O(u,n,i):s.isFile()&&o.some(e=>e instanceof RegExp?e.test(c):c===e)&&t.unlinkSync(u)}catch(e){console.error(`Error processing ${c}: ${e.message}`);continue}return{folderPath:e,pattern:n}}catch(t){return console.error(`Error processing folder ${e}: ${t.message}`),{}}},E=(e,t)=>{let r=l(e);if(r){for(let[e,n]of Object.entries(t))r=r.replace(RegExp(e,"g"),n);d(e,r,{overwrite:!0,newFile:!1})}};
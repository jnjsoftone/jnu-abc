"use strict";var e;Object.defineProperty(exports,"__esModule",{value:!0}),!function(e,r){for(var t in r)Object.defineProperty(e,t,{enumerable:!0,get:r[t]})}(exports,{composeHangul:function(){return u},copyDir:function(){return y},deleteFilesInFolder:function(){return _},exists:function(){return x},existsFile:function(){return F},existsFolder:function(){return m},findFiles:function(){return g},findFolders:function(){return S},loadFile:function(){return l},loadJson:function(){return a},makeDir:function(){return p},moveFile:function(){return $},moveFiles:function(){return h},renameFilesInFolder:function(){return v},sanitizeName:function(){return s},saveFile:function(){return f},saveJson:function(){return d},setPath:function(){return c},slashedFolder:function(){return o},substituteInFile:function(){return O}});const r=/*#__PURE__*/function(e,r){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=n(r);if(t&&t.has(e))return t.get(e);var i={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in e)if("default"!==c&&Object.prototype.hasOwnProperty.call(e,c)){var u=o?Object.getOwnPropertyDescriptor(e,c):null;u&&(u.get||u.set)?Object.defineProperty(i,c,u):i[c]=e[c]}return i.default=e,t&&t.set(e,i),i}(require("fs")),t=(e=require("path"))&&e.__esModule?e:{default:e};function n(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(n=function(e){return e?t:r})(e)}const i=e=>e.replace(/^\uFEFF/gm,"").replace(/^\u00BB\u00BF/gm,"").replace(/\r\n/g,"\n"),o=e=>(e=e.replace(/\\/g,"/")).endsWith("/")?e.slice(0,-1):e,c=e=>(e.startsWith(".")&&(e=t.default.join(process.cwd(),e)),o(e)),u=e=>e?e.toString().normalize("NFKC"):"",s=e=>e?(e=u(e)).replace(/\[/g,"(").replace(/\]/g,")").replace(/[^\uAC00-\uD7A3a-zA-Z0-9_\(\)\<\>,\s]/g,"").replace(/\s+/g," ").trim():"",l=(e,t="utf8")=>{try{return i(r.readFileSync(c(e),{encoding:t}))}catch{return""}},a=(e,t="utf8")=>{try{return JSON.parse(i(r.readFileSync(c(e),{encoding:t})))}catch{return{}}},f=(e,n="",{encoding:i="utf-8",overwrite:o=!0,newFile:u=!0}={})=>{if(e=c(e),u&&r.existsSync(e)){let n=t.default.dirname(e),i=t.default.extname(e),o=t.default.basename(e,i),c=1;for(;r.existsSync(e);)e=t.default.join(n,`${o}(${c})${i}`),c++}r.mkdirSync(t.default.dirname(e),{recursive:!0}),o?r.writeFileSync(e,n,i):r.appendFileSync(e,n,i)},d=(e,r={},{indent:t=2,overwrite:n=!0,newFile:i=!1}={})=>{f(c(e),JSON.stringify(r,null,t),{overwrite:n,newFile:i})},p=e=>{r.mkdirSync(c(e),{recursive:!0})},y=(e,t,n=!0)=>{r.cpSync(c(e),c(t),{recursive:n})},g=(e,n="",i=[])=>{if(!r.existsSync(e))return[];let o=r.readdirSync(e);return i=i||[],o.forEach(function(o){r.statSync(e+"/"+o).isDirectory()?i=g(e+"/"+o,n,i):(n instanceof RegExp?n:new RegExp(n.replace(/\*/g,".*"))).test(o)&&i.push(t.default.join(e,"/",o))}),i};function S(e,n=""){let i=[];for(let c of r.readdirSync(e)){let u=t.default.join(e,c),s=n instanceof RegExp?n:new RegExp(n.replace(/\*/g,".*"));r.statSync(u).isDirectory()&&s.test(c)&&i.push(o(u))}return i}const m=e=>r.existsSync(e),F=e=>r.existsSync(e),x=e=>r.existsSync(e),$=(e,t,n,i)=>{e=o(e),t=o(t),r.rename(`${e}/${n}`,`${t}/${i}`,e=>console.log(e))},h=(e,t,n,i)=>{e=o(e),t=o(t),r.existsSync(t)||r.mkdirSync(t,{recursive:!0});for(let o=0;o<n.length;o++){let c=n[o],u=i[o];r.rename(`${e}/${c}`,`${t}/${u}`,e=>console.log(e))}},v=(e,t,n)=>(e=`${process.env.DIR_ROOT}/${e}`,t=e=>e.endsWith(".ts"),n=r=>`${e}/${r}`,r.readdirSync(e).filter(e=>t(e)).map(e=>n(e))),_=(e,n="node_modules/,.git/.DS_Store",i=!0)=>{try{if(!r.existsSync(e))return;let o=n.split(",").map(e=>e.endsWith("/")?e:e.includes("*")?RegExp("^"+e.replace(/\*/g,".*")+"$"):e);for(let c of r.readdirSync(e))try{let u=t.default.join(e,c),s=r.statSync(u);s.isDirectory()&&i?o.some(e=>"string"==typeof e&&e.endsWith("/")&&c+"/"===e)?r.rmSync(u,{recursive:!0,force:!0}):_(u,n,i):s.isFile()&&o.some(e=>e instanceof RegExp?e.test(c):c===e)&&r.unlinkSync(u)}catch(e){console.error(`Error processing ${c}: ${e.message}`);continue}return{folderPath:e,pattern:n}}catch(r){return console.error(`Error processing folder ${e}: ${r.message}`),{}}},O=(e,r)=>{let t=l(e);for(let[e,n]of Object.entries(r))t=t.replace(RegExp(e,"g"),n);f(e,t,{overwrite:!0,newFile:!1})};
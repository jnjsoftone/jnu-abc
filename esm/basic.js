let e=()=>"pong",t=e=>"{}"===JSON.stringify(e),r=e=>"{}"===JSON.stringify(e)||"[]"===JSON.stringify(e),n=e=>!0!==e&&("number"!=typeof e||0===e)&&(!1===e||null==e||Number.isNaN(e)||0===e||""===e||Array.isArray(e)&&0===e.length||"object"==typeof e&&null!==e&&0===Object.keys(e).length),s=e=>null!=e&&"string"==typeof e&&""!==e.trim(),o=e=>structuredClone(e),i=(e,t)=>e.replace(/\${(.*?)}/g,(e,r)=>{let n=`return ${r}`;return Function(...Object.keys(t),n)(...Object.values(t))}),l=(e,t)=>{for(let r of t)if(e.includes(r))return!0;return!1},u=e=>"string"==typeof e?e.trim():JSON.stringify(e),a=(e,t=",",r=!0,n="\n")=>{let s=[];for(let o of e.split(n))r?s.push(o.slice(1,-1).split(`"${t}"`).map(e=>e.trim())):s.push(o.split(t).map(e=>e.trim()));return s},c=(e,t=",",r=!0,n="\n")=>{let s="";for(let o of e)r?s+=`"${o.join('"'+t+'"')}"${n}`:s+=`${o.join(t)}${n}`;return s},p=(e,t=0,r=!1)=>{let n=e.map(e=>e[t]);return r?n.slice(1):n},f=(e,t)=>(delete e[t],e),m=(e,t,r,n="")=>Object.keys(t).reduce(function(s,o){return s[t[o]]=e[o]??r[o]??n,s},{}),d=(e,t)=>Object.keys(e).reduce(function(r,n){return r[t[n]??n]=e[n],r},{}),y=(e,t,r,n="")=>Object.keys({...e,...r}).reduce(function(s,o){return s[t[o]??o]=e[o]??r[o]??n,s},{}),g=(e,t,r,n="",s="new")=>{let o=t;switch(s.toLowerCase()){case"rename":o=e;break;case"update":o={...e,...r}}return Object.keys(o).reduce(function(s,o){return s[t[o]??o]=e[o]??r[o]??n,s},{})},h=(e,t)=>e.map(e=>e[t]),O=(e,t)=>e.reduce((e,r,n)=>(e[r]=t[n],e),{}),w=(e,t)=>t.map(t=>e.reduce((e,r,n)=>(e[r]=t[n],e),{})),b=e=>null===e||"object"!=typeof e?[]:[Object.keys(e),Object.values(e)],D=(e,t={},r=!1)=>{let n=Object.keys(t),s=Object.values(t);return r?e.map((e,t)=>0===t?[...e,...n]:[...e,...s]):e.map((e,t)=>0===t?[...n,...e]:[...s,...e])},S=(e,t=[[]])=>{let r=e,n=[...Array(e.length).keys()];return t[0].length>0&&(r=t[1],n=t[0].map(t=>e.indexOf(t))),[r,n]},j=(e,t=[[]],r="")=>{if(!e||0==e.length)return[];let[n,s]=S(e.shift(),t);return e.map(e=>{let t={};return n.forEach((n,o)=>{t[n]=-1!=s[o]?e[s[o]]??r:r}),t})},F=(e,t=[[]],r="")=>{if(!e||0==e.length)return[];let n=Object.keys(e[0]),[s,o]=S(n,t),i=[s];for(let t of e){let e=[];for(let i=0;i<s.length;i++){let s=o[i];-1==s?e.push(r):e.push(t[n[s]])}i.push(e)}return i},k=e=>{let t=Object.keys(e[0]),r=[t];for(let n of e){let e=[];for(let r of t)e.push(n[r]);r.push(e)}return r},$=e=>{let t=e[0],r=[];for(let n=1;n<e.length;n++){let s=e[n],o={};for(let e=0;e<t.length;e++)o[t[e]]=s[e];r.push(o)}return r},v=e=>Object.keys(e).reduce((t,r)=>(t[e[r]]=r,t),{});function A(e=[],t=[],r){let n={adds:[],dels:[],upds:[]};return t.forEach(t=>{let s=e.find(e=>r.every(r=>t[r]===e[r]));s?Object.entries(t).every(([e,t])=>s[e]===t)||n.upds.push(t):n.adds.push(t)}),e.forEach(e=>{t.find(t=>r.every(r=>e[r]===t[r]))||n.dels.push(e)}),n}let K=(e,t)=>{for(let r of t)delete e[r];return e},N=e=>new Intl.DateTimeFormat("ko-KR",{year:"numeric",month:"numeric",day:"numeric",weekday:"short"}).format(new Date(e)),E=e=>{let t=e?.timeZone??"Asia/Seoul",r=e?.hour12??!1,n=e?.format??"basic",s=new Date(new Date().toLocaleString("en-US",{timeZone:t,hour12:r})).toISOString().replace(/T/," ").replace(/\..+/,"");if("KO"===n.toUpperCase()){let[e,t]=s.split(" ");s=`${N(e)} ${t}`}return s},T=e=>{let t=new Date(e);return`${t.getFullYear()}${String(t.getMonth()+1).padStart(2,"0")}${String(t.getDate()).padStart(2,"0")} ${t.getHours()}:${String(t.getMinutes()).padStart(2,"0")}:${String(t.getSeconds()).padStart(2,"0")}`},J=(e,t,...r)=>{if("function"!=typeof e)throw TypeError("Expected a function");return setTimeout(e,+t||0,...r)},C=e=>{let t=Date.now(),r=t;for(;r-t<1e3*e;)r=Date.now()},x=async e=>{await new Promise(t=>setTimeout(t,e))};export{e as ping,t as isEmptyDict,r as isEmpty,n as isFalsy,s as isValidStr,o as serializeNonPOJOs,i as evalStr,l as includesMulti,u as strFromAny,a as rowsFromCsv,c as csvFromRows,p as arrFromArrs,f as popDict,m as newKeys,d as renameKeys,y as overwriteKeys,g as updateKeys,h as arrFromDicts,O as dictFromDuo,w as dictsFromDuos,b as duoFromDict,F as rowsFromDicts,j as dictsFromRows,k as arrsFromDicts,$ as dictsFromArrs,D as rowsAddedDefaults,v as swapDict,A as getUpsertDicts,K as removeDictKeys,N as dateKo,E as now,T as timeFromTimestamp,J as delay,C as sleep,x as sleepAsync};
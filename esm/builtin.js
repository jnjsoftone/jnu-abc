import*as e from"fs";import r from"path";import t from"https";import s from"http";let n="win32"===process.platform?"win":"darwin"===process.platform?"mac":"linux"===process.platform?"linux":process.platform,i=e=>e.replace(/^\uFEFF/gm,"").replace(/^\u00BB\u00BF/gm,"").replace(/\r\n/g,"\n"),o=e=>(e=e.replace(/\\/g,"/")).endsWith("/")?e.slice(0,-1):e,c=e=>(e.startsWith(".")&&(e=r.join(process.cwd(),e)),o(e)),l=e=>e?e.toString().normalize("NFKC"):"",a=e=>e?(e=l(e)).replace(/\[/g,"(").replace(/\]/g,")").replace(/[^\uAC00-\uD7A3a-zA-Z0-9_\(\)\<\>,\s]/g,"").replace(/\s+/g," ").trim():"",p=(r,t="utf8")=>{try{return i(e.readFileSync(c(r),{encoding:t}))}catch{return""}},u=(r,t="utf8")=>{try{return JSON.parse(i(e.readFileSync(c(r),{encoding:t})))}catch{return{}}},m=(r,t="utf8")=>{try{let s=i(e.readFileSync(c(r),{encoding:t}));if(!s)return{};let n=s.split("\n"),o={};for(let e of n){let r=e.split("="),[t,s]=[r[0].trim(),r.slice(1).join("=").trim()];!t||t.startsWith("#")||t.startsWith("//")||(o[t]=s.replace(/^['"]|['"]$/g,""))}return o}catch{return{}}},f=(r,t,s="utf8")=>{let n=Object.entries(t).map(([e,r])=>`${e}=${r}`).join("\n");e.writeFileSync(c(r),n,{encoding:s})},d=(t,s="",{encoding:n="utf-8",overwrite:i=!0,newFile:o=!0}={})=>{if(t=c(t),o&&e.existsSync(t)){let s=r.dirname(t),n=r.extname(t),i=r.basename(t,n),o=1;for(;e.existsSync(t);)t=r.join(s,`${i}(${o})${n}`),o++}e.mkdirSync(r.dirname(t),{recursive:!0}),i?e.writeFileSync(t,s,n):e.appendFileSync(t,s,n)},y=(e,r={},{indent:t=2,overwrite:s=!0,newFile:n=!1}={})=>{d(c(e),JSON.stringify(r,null,t),{overwrite:s,newFile:n})},g=r=>{e.mkdirSync(c(r),{recursive:!0})},F=(r,t,s=!0)=>{e.cpSync(c(r),c(t),{recursive:s})},S=(t,s="",n=[])=>{if(!e.existsSync(t))return[];let i=e.readdirSync(t);return n=n||[],i.forEach(function(i){e.statSync(t+"/"+i).isDirectory()?n=S(t+"/"+i,s,n):(s instanceof RegExp?s:new RegExp(s.replace(/\*/g,".*"))).test(i)&&n.push(r.join(t,"/",i))}),n};function h(t,s=""){let n=[];for(let i of e.readdirSync(t)){let c=r.join(t,i),l=s instanceof RegExp?s:new RegExp(s.replace(/\*/g,".*"));e.statSync(c).isDirectory()&&l.test(i)&&n.push(o(c))}return n}let $=r=>e.existsSync(r),x=r=>e.existsSync(r),E=r=>e.existsSync(r),v=(r,t,s,n)=>{r=o(r),t=o(t),e.rename(`${r}/${s}`,`${t}/${n}`,e=>console.log(e))},w=(r,t,s,n)=>{r=o(r),t=o(t),e.existsSync(t)||e.mkdirSync(t,{recursive:!0});for(let i=0;i<s.length;i++){let o=s[i],c=n[i];e.rename(`${r}/${o}`,`${t}/${c}`,e=>console.log(e))}},R=(r,t,s)=>(r=`${process.env.DIR_ROOT}/${r}`,t=e=>e.endsWith(".ts"),s=e=>`${r}/${e}`,e.readdirSync(r).filter(e=>t(e)).map(e=>s(e))),j=(t,s="node_modules/,.git/.DS_Store",n=!0)=>{try{if(!e.existsSync(t))return;let i=s.split(",").map(e=>e.endsWith("/")?e:e.includes("*")?RegExp("^"+e.replace(/\*/g,".*")+"$"):e);for(let o of e.readdirSync(t))try{let c=r.join(t,o),l=e.statSync(c);l.isDirectory()&&n?i.some(e=>"string"==typeof e&&e.endsWith("/")&&o+"/"===e)?e.rmSync(c,{recursive:!0,force:!0}):j(c,s,n):l.isFile()&&i.some(e=>e instanceof RegExp?e.test(o):o===e)&&e.unlinkSync(c)}catch(e){console.error(`Error processing ${o}: ${e.message}`);continue}return{folderPath:t,pattern:s}}catch(e){return console.error(`Error processing folder ${t}: ${e.message}`),{}}},D=(e,r)=>{let t=p(e);if(t){for(let[e,s]of Object.entries(r))t=t.replace(RegExp(e,"g"),s);d(e,t,{overwrite:!0,newFile:!1})}},W=async e=>new Promise((r,n)=>{let i=(e.startsWith("https")?t:s).get(e,e=>{if(301===e.statusCode||302===e.statusCode){W(e.headers.location).then(r).catch(n);return}if(200!==e.statusCode)return n(Error(`파일 스트림 가져오기 실패: 상태 코드 ${e.statusCode}`));r(e)});i.on("error",e=>{n(e)}),i.setTimeout(3e4,()=>{i.destroy(),n(Error("요청 타임아웃: 30초 경과"))})}),O=e=>new Promise((r,t)=>{let s=[];e.on("data",e=>s.push(e)),e.on("end",()=>r(Buffer.concat(s))),e.on("error",t)}),B=async e=>O(await W(e)),C=async(e,r)=>{d(e,await B(r))};export{n as PLATFORM,o as slashedFolder,l as composeHangul,c as setPath,a as sanitizeName,p as loadFile,u as loadJson,m as loadEnv,d as saveFile,y as saveJson,f as saveEnv,g as makeDir,F as copyDir,S as findFiles,h as findFolders,$ as existsFolder,x as existsFile,E as exists,v as moveFile,w as moveFiles,R as renameFilesInFolder,j as deleteFilesInFolder,D as substituteInFile,W as getFileStreamFromUrl,O as streamToBuffer,B as getFileBufferFromUrl,C as saveFileFromUrl};
#!/usr/bin/env node
let e,a,r;import o from"yargs";import{saveJson as t,saveFile as i,findFiles as s,deleteFilesInFolder as n}from"./builtin.js";import{initApp as l,removeApp as p,zip as c,tree as d,unzip as m}from"./cli.js";let u="||",$=`${u}${u}`,g=`${u}${u}`,f=o.usage("Usage: -e <command> -r <required> -o <optional>").option("e",{alias:"exec",describe:"Execute Command",type:"string",demandOption:!0}).option("r",{alias:"requiredParameter",default:"",describe:"Required Parameter",type:"string"}).option("o",{alias:"optionalParameter",default:"{}",describe:"Optional Parameter",type:"string"}).option("s",{alias:"saveOption",default:"",describe:"Save file for result(return)",type:"string"}).parseSync(),b={exec:f.e,requiredParameter:f.r,optionalParameter:f.o,saveOption:f.s},k=(e,a,r=u)=>{let o=a.split(r);return e&&e.split(r).forEach((e,a)=>{e&&(o[a]=e)}),o},v=(e,a,r=u)=>k(e,a,r),q=(e,a,r=`options.json${u}json${u}1`,o=u)=>{let[s,n,l]=k(a,r,o);switch(console.log(`@@@saveOption: ${a}`),n){case"file":i(s,e),l&&console.log(`${e}`);break;case"json":t(s,e),l&&console.log(`${JSON.stringify(e)}`);break;case"sqlite":console.log(`saveSqlite: ${s}, ${e}`),l&&console.log(`${JSON.stringify(e)}`);break;default:console.log(`save type is not supported: ${n}`)}};switch(b.exec){case"init":a=`repoName${u}jnjsoftone${u}node-simple${u}JnJ Utility For Development`,q(e=l({template:(r=v(b.requiredParameter??"",a,u))[2],repoName:r[0],userName:r[1],description:r[3]}),b.saveOption??"",$);break;case"remove":a=`repoName${u}jnjsoftone`,p({repoName:(r=v(b.requiredParameter??"",a,u))[0],userName:r[1]});break;case"zip":let[O,P]=v(b.requiredParameter??`"${u}node_modules/,package-lock.json,.next/"`,u);console.log(`@@@@ zipFolder: ${O}, zipExcluded: ${P}`),q(e=c(O,P),b.saveOption??"",$);break;case"tree":d(b.requiredParameter??""),q(e,b.saveOption??"",g);break;case"find":let[j,y]=v(b.requiredParameter??`"${u}"`,u);s(j,y),q(e,b.saveOption??"",g);break;case"del":let[x,N]=v(b.requiredParameter??`"${u}node_modules/,package-lock.json,.git/.next/"`,u);q(e=n(x,N,!0)??"",b.saveOption??"",$);break;case"unzip":let[S,z]=v(b.requiredParameter??`"${u}node_modules/,package-lock.json,.git/.next/"`,u);q(e=m(S,z),b.saveOption??"",g);break;default:console.log("Invalid command")}
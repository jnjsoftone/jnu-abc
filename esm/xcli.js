#!/usr/bin/env node
let e,a,r;import o from"yargs";import{saveJson as t,saveFile as s,findFiles as i,deleteFilesInFolder as n}from"./builtin.js";import{initApp as l,removeApp as p,zip as c,tree as m,unzip as d}from"./cli.js";let u="||",g=`options.json${u}json${u}1`,$=`result.txt${u}file${u}1`,f=o.usage("Usage: -e <command> -r <required> -o <optional>").option("e",{alias:"exec",describe:"Execute Command",type:"string",demandOption:!0}).option("r",{alias:"requiredParameter",default:"",describe:"Required Parameter",type:"string"}).option("o",{alias:"optionalParameter",default:"{}",describe:"Optional Parameter",type:"string"}).option("s",{alias:"saveOption",default:"",describe:"Save file for result(return)",type:"string"}).parseSync(),b={exec:f.e,requiredParameter:f.r,optionalParameter:f.o,saveOption:f.s},k=(e,a,r=u)=>{let o=a.split(r);return e&&e.split(r).forEach((e,a)=>{e&&(o[a]=e)}),o},v=(e,a,r=u)=>k(e,a,r),j=(e,a,r=`options.json${u}json${u}1`,o=u)=>{let[i,n,l]=k(a,r,o);switch(console.log(`@@@saveOption: ${a}`),n){case"file":s(i,e),l&&console.log(`${e}`);break;case"json":t(i,e),l&&console.log(`${JSON.stringify(e)}`);break;case"sqlite":console.log(`saveSqlite: ${i}, ${e}`),l&&console.log(`${JSON.stringify(e)}`);break;default:console.log(`save type is not supported: ${n}`)}};switch(b.exec){case"init":a=`repoName${u}jnjsoftone${u}node-simple${u}JnJ Utility For Development`,j(e=l({template:(r=v(b.requiredParameter??"",a,u))[2],repoName:r[0],userName:r[1],description:r[3]}),b.saveOption??"",g);break;case"remove":a=`repoName${u}jnjsoftone`,p({repoName:(r=v(b.requiredParameter??"",a,u))[0],userName:r[1]});break;case"zip":let[q,O]=v(b.requiredParameter??`"${u}node_modules/,package-lock.json,.next/"`,u);j(e=c(q,O),b.saveOption??"",g);break;case"tree":m(b.requiredParameter??""),j(e,b.saveOption??"",$);break;case"find":let[P,y]=v(b.requiredParameter??`"${u}"`,u);i(P,y),j(e,b.saveOption??"",$);break;case"del":let[x,N]=v(b.requiredParameter??`"${u}node_modules/,package-lock.json,.git/.next/"`,u);j(e=n(x,N,!0)??"",b.saveOption??"",g);break;case"unzip":let[S,J]=v(b.requiredParameter??`"${u}node_modules/,package-lock.json,.git/.next/"`,u);j(e=d(S,J),b.saveOption??"",$);break;default:console.log("Invalid command")}